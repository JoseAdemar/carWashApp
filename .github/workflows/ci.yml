name: CarWashApp CI/CD

# Dispara a pipeline quando houver push ou PR nas branches main e developer
on:
  push:
    branches:
      - developer
      - main
  pull_request:
    branches:
      - developer
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Pega o código do repositório
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Configura o Java 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      # 3️⃣ Cache das dependências Maven para acelerar builds
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # 4️⃣ Build do projeto
      - name: Build with Maven
        run: mvn clean install -DskipTests=false

      # 5️⃣ Executa testes unitários
      - name: Run tests
        run: mvn test

      # 6️⃣ Checkstyle (opcional) para validar padrão de código
      - name: Checkstyle
        run: mvn checkstyle:check || true

  # Exemplo de job de deploy (opcional)
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build-and-test
  #   steps:
  #     - name: Deploy step placeholder
  #       run: echo "Deploy can be configured here"
